#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Reginald
  class Parser < Racc::Parser #:nodoc: all

def self.parse_regexp(regexp)
  options = Options.from_int(regexp.options)

  parser = new
  parser.options_stack << options.to_h

  expression = parser.scan_str(regexp.source)
  expression = expression.dup(options.to_h) if options.any?
  expression
end

attr_accessor :options_stack

def initialize
  @capture_index = 0
  @capture_index_stack = []
  @options_stack = []
end

##### State transition tables begin ###

racc_action_table = [
     1,    17,    18,    18,     7,     8,    10,    11,    48,    18,
     1,    60,     2,     4,     7,     8,    10,    11,    45,    47,
     1,    55,     2,     4,     7,     8,    10,    11,    28,    18,
     1,    15,     2,     4,     7,     8,    10,    11,    64,    18,
     1,    63,     2,     4,     7,     8,    10,    11,    61,    49,
     1,    27,     2,     4,     7,     8,    10,    11,    36,    25,
     1,    33,     2,     4,     7,     8,    10,    11,   nil,   nil,
     1,   nil,     2,     4,     7,     8,    10,    11,    42,    43,
    46,    31,     2,     4,    32,    20,    44,    37,    39,    41,
    21,    22,    24,    20,    58,    37,    39,    41,    21,    22,
    24,    13,   nil,    14,    30,    31,    15,   nil,    32,    51,
    37,    39,    41,    37,    39,    41,    37,    39,    41,    37,
    39,    41,    37,    39,    41,    37,    39,    41,    37,    39,
    41 ]

racc_action_check = [
     0,     3,    52,     3,     0,     0,     0,     0,    36,    26,
    49,    52,     0,     0,    49,    49,    49,    49,    26,    36,
    43,    48,    49,    49,    43,    43,    43,    43,    14,    56,
     5,    14,    43,    43,     5,     5,     5,     5,    56,    53,
    34,    55,     5,     5,    34,    34,    34,    34,    53,    38,
    11,    13,    34,    34,    11,    11,    11,    11,    24,    11,
    18,    17,    11,    11,    18,    18,    18,    18,   nil,   nil,
    42,   nil,    18,    18,    42,    42,    42,    42,    25,    25,
    29,    29,    42,    42,    29,    19,    25,    25,    25,    25,
    19,    19,    19,     6,    50,    50,    50,    50,     6,     6,
     6,     1,   nil,     1,    16,    16,     1,   nil,    16,    40,
    40,    40,    40,    54,    54,    54,    58,    58,    58,    59,
    59,    59,    51,    51,    51,    62,    62,    62,    44,    44,
    44 ]

racc_action_pointer = [
    -3,    97,   nil,     1,   nil,    27,    81,   nil,   nil,   nil,
   nil,    47,   nil,    46,    22,   nil,    99,    61,    57,    73,
   nil,   nil,   nil,   nil,    49,    65,     7,   nil,   nil,    75,
   nil,   nil,   nil,   nil,    37,   nil,    -1,   nil,    36,   nil,
    88,   nil,    67,    17,   106,   nil,   nil,   nil,    12,     7,
    73,   100,     0,    37,    91,    21,    27,   nil,    94,    97,
   nil,   nil,   103,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
   -37,   -37,   -19,   -37,   -20,    -2,    -6,   -11,   -12,    -7,
   -14,   -37,   -13,   -37,   -29,   -28,   -37,   -37,   -37,    -4,
   -23,   -21,   -22,    -5,   -37,   -37,   -37,    -8,   -29,   -37,
    -9,   -27,   -26,    68,    -1,    -3,   -37,   -34,   -37,   -35,
   -37,   -36,   -37,   -37,   -37,   -15,   -10,   -25,   -37,   -37,
   -37,   -37,   -37,   -37,   -37,   -37,   -37,   -33,   -37,   -37,
   -17,   -18,   -37,   -24,   -16,   -32,   -31,   -30 ]

racc_goto_table = [
     3,    40,    19,    38,    16,    23,    34,   nil,   nil,   nil,
   nil,    26,   nil,   nil,   nil,   nil,    50,    29,    35,   nil,
    54,   nil,   nil,   nil,   nil,   nil,    57,    59,   nil,   nil,
    62,    19,   nil,   nil,    65,    66,   nil,   nil,    67,   nil,
   nil,   nil,    52,    53,   nil,   nil,   nil,   nil,   nil,    56 ]

racc_goto_check = [
     1,     9,     3,     8,     6,     4,     2,   nil,   nil,   nil,
   nil,     1,   nil,   nil,   nil,   nil,     9,     6,     4,   nil,
     9,   nil,   nil,   nil,   nil,   nil,     9,     9,   nil,   nil,
     9,     3,   nil,   nil,     9,     9,   nil,   nil,     9,   nil,
   nil,   nil,     1,     1,   nil,   nil,   nil,   nil,   nil,     1 ]

racc_goto_pointer = [
   nil,     0,   -12,    -3,    -1,   nil,     3,   nil,   -22,   -24 ]

racc_goto_default = [
   nil,   nil,     5,     6,   nil,     9,   nil,    12,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 26, :_reduce_1,
  1, 26, :_reduce_2,
  3, 27, :_reduce_3,
  2, 27, :_reduce_4,
  2, 27, :_reduce_5,
  1, 27, :_reduce_none,
  1, 28, :_reduce_none,
  3, 28, :_reduce_8,
  3, 28, :_reduce_9,
  4, 28, :_reduce_10,
  1, 28, :_reduce_11,
  1, 28, :_reduce_12,
  1, 28, :_reduce_13,
  1, 28, :_reduce_14,
  3, 30, :_reduce_15,
  6, 30, :_reduce_16,
  5, 30, :_reduce_17,
  5, 30, :_reduce_18,
  1, 32, :_reduce_none,
  1, 32, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  5, 29, :_reduce_24,
  3, 29, :_reduce_25,
  2, 31, :_reduce_26,
  2, 31, :_reduce_27,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  4, 33, :_reduce_30,
  4, 33, :_reduce_31,
  4, 33, :_reduce_32,
  3, 33, :_reduce_33,
  1, 34, :_reduce_34,
  1, 34, :_reduce_35,
  1, 34, :_reduce_36 ]

racc_reduce_n = 37

racc_shift_n = 68

racc_token_table = {
  false => 0,
  :error => 1,
  :BAR => 2,
  :LBRACK => 3,
  :CTYPE => 4,
  :RBRACK => 5,
  :NEGATE => 6,
  :CCLASS => 7,
  :DOT => 8,
  :CHAR => 9,
  :LPAREN => 10,
  :RPAREN => 11,
  :QMARK => 12,
  :COLON => 13,
  :NAME => 14,
  :L_ANCHOR => 15,
  :R_ANCHOR => 16,
  :STAR => 17,
  :PLUS => 18,
  :LCURLY => 19,
  :RCURLY => 20,
  :MINUS => 21,
  :MULTILINE => 22,
  :IGNORECASE => 23,
  :EXTENDED => 24 }

racc_nt_base = 25

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "BAR",
  "LBRACK",
  "CTYPE",
  "RBRACK",
  "NEGATE",
  "CCLASS",
  "DOT",
  "CHAR",
  "LPAREN",
  "RPAREN",
  "QMARK",
  "COLON",
  "NAME",
  "L_ANCHOR",
  "R_ANCHOR",
  "STAR",
  "PLUS",
  "LCURLY",
  "RCURLY",
  "MINUS",
  "MULTILINE",
  "IGNORECASE",
  "EXTENDED",
  "$start",
  "expression",
  "branch",
  "atom",
  "quantifier",
  "group",
  "bracket_expression",
  "anchor",
  "options",
  "modifier" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
 result = Expression.new(Alternation.reduce(val[0], val[2])) 
    result
end

def _reduce_2(val, _values, result)
 result = Expression.reduce(val[0]) 
    result
end

def _reduce_3(val, _values, result)
 result = Expression.reduce(val[0], val[1].dup(:quantifier => val[2])) 
    result
end

def _reduce_4(val, _values, result)
 result = Expression.reduce(val[0], val[1]) 
    result
end

def _reduce_5(val, _values, result)
 result = val[0].dup(:quantifier => val[1]) 
    result
end

# reduce 6 omitted

# reduce 7 omitted

def _reduce_8(val, _values, result)
 result = CharacterClass.new(val[1]) 
    result
end

def _reduce_9(val, _values, result)
 result = CharacterClass.new(val[1]) 
    result
end

def _reduce_10(val, _values, result)
 result = CharacterClass.new(val[2], :negate => true) 
    result
end

def _reduce_11(val, _values, result)
 result = CharacterClass.new(val[0]) 
    result
end

def _reduce_12(val, _values, result)
 result = CharacterClass.new('.') 
    result
end

def _reduce_13(val, _values, result)
 result = Anchor.new(val[0]) 
    result
end

def _reduce_14(val, _values, result)
 result = Character.new(val[0]) 
    result
end

def _reduce_15(val, _values, result)
          result = Group.new(val[1], :index => @capture_index_stack.pop)

    result
end

def _reduce_16(val, _values, result)
          result = Group.new(val[4], val[2].merge(:capture => false))
          @options_stack.pop

    result
end

def _reduce_17(val, _values, result)
          result = Group.new(val[3], :capture => false);

    result
end

def _reduce_18(val, _values, result)
          result = Group.new(val[3], :name => val[2], :index => @capture_index_stack.pop);

    result
end

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

def _reduce_24(val, _values, result)
 result = val.join 
    result
end

def _reduce_25(val, _values, result)
 result = val.join 
    result
end

def _reduce_26(val, _values, result)
 result = val.join 
    result
end

def _reduce_27(val, _values, result)
 result = val.join 
    result
end

# reduce 28 omitted

# reduce 29 omitted

def _reduce_30(val, _values, result)
            @options_stack << result = { val[1] => false, val[2] => false, val[3] => false }

    result
end

def _reduce_31(val, _values, result)
            @options_stack << result = { val[0] => true, val[2] => false, val[3] => false }

    result
end

def _reduce_32(val, _values, result)
            @options_stack << result = { val[0] => true, val[1] => true, val[3] => false }

    result
end

def _reduce_33(val, _values, result)
            @options_stack << result = { val[0] => true, val[1] => true, val[2] => true }

    result
end

def _reduce_34(val, _values, result)
 result = :multiline 
    result
end

def _reduce_35(val, _values, result)
 result = :ignorecase 
    result
end

def _reduce_36(val, _values, result)
 result = :extended 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
end   # module Reginald

require 'reginald/tokenizer'
                                                                        